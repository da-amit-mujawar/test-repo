DROP TABLE IF EXISTS nosuchtable;
--Load IGConsumer email table 49 min
COPY {email-load-table}
(
    id,
    filler_1,
    filler_2,
    filler_3,
    opt_out_flag,
    emailaddress,
    titlecode,
    cfirstname,
    middle_initial,
    clastname,
    caddress1,
    caddress2,
    ccity,
    state,
    postal_code,
    vendor_code,
    zip_4,
    delivery_point,
    carrier_route,
    county_code,
    gender,
    filler_4,
    filler_5,
    filler_6,
    filler_7,
    filler_8,
    filler_9,
    filler_10,
    filler_11,
    filler_12,
    filler_13,
    filler_14,
    filler_15,
    filler_16,
    filler_17,
    filler_18,
    filler_19,
    epd_domain,
    top_level_domain,
    opt_out_date,
    filler_20,
    filler_21,
    census_county,
    census_block,
    census_track,
    longitude,
    latitude,
    filler_22,
    filler_23,
    filler_24,
    filler_25,
    filler_26,
    filler_27,
    filler_28,
    filler_29,
    car_make,
    car_model,
    car_year,
    filler_30,
    filler_31,
    filler_32,
    filler_33,
    filler_34,
    filler_35,
    filler_36,
    filler_37,
    filler_38,
    filler_39,
    filler_40,
    filler_41,
    filler_42,
    filler_43,
    filler_44,
    filler_45,
    filler_46,
    filler_47,
    filler_48,
    filler_49,
    filler_50,
    filler_61,
    filler_62,
    filler_63,
    filler_64,
    filler_65,
    filler_66,
    filler_67,
    filler_68,
    filler_69,
    filler_70,
    filler_71,
    filler_72,
    filler_73,
    filler_74,
    filler_75,
    filler_76,
    filler_77,
    filler_78,
    filler_79,
    filler_80,
    filler_81,
    filler_82,
    filler_83,
    filler_84,
    filler_85,
    filler_86,
    filler_87,
    filler_88,
    filler_89,
    filler_90,
    filler_91,
    filler_92,
    filler_93,
    filler_94,
    filler_95,
    filler_96,
    filler_97,
    filler_98,
    filler_99,
    filler_100,
    filler_101,
    filler_102,
    filler_103,
    filler_104,
    filler_105,
    filler_106,
    filler_107,
    filler_108,
    filler_109,
    filler_110,
    filler_111,
    filler_112,
    filler_113,
    ah1_mailability_score,
    filler_114,
    date_entered_yyyymm,
    email_domain,
    url,
    ipaddress,
    filler_115,
    filler_116,
    filler_117,
    filler_118,
    md5_email_lower,
    md5_email_upper,
    company_id, 
    individual_id,
    bv_flag,
    sha256_email,
    sha512_email,
    marigold,
    filler_119,
    filler_120,
    bvt_refresh_date,
    ipst_status_code,
    ipst_refresh_date,
    scf,
    zip,
    matchcode_lrfs,
    filler_121,
    best_date_yyyymmdd,
    filler_122,
    filler_123,
    reactivation_flag,
    mgen_match_flag,
    cbsa,
    individual_mc,
    household_mc,
    consumer_digital_match,
    bridge_code,
    best_date_range,
    email_deliverable,
    email_marketable,
    email_reputation_risk,
    email_deployable,
    filler_124
)
FROM 's3://{s3-internal}{s3-key-email}'
IAM_ROLE '{iam}'
REMOVEQUOTES
FIXEDWIDTH
'id :15,
filler_1 :9,
filler_2 :1,
filler_3 :7,
opt_out_flag :1,
emailaddress :80,
titlecode :1,
cfirstname :15,
middle_initial :1,
clastname :20,
caddress1 :40,
caddress2 :40,
ccity :28,
state :2,
postal_code :6,
vendor_code :2,
zip_4 :4,
delivery_point :3,
carrier_route :4,
county_code :3,
gender :1,
filler_4:2,
filler_5:10,
filler_6:1,
filler_7:1,
filler_8:1,
filler_9:1,
filler_10:4,
filler_11:1,
filler_12:1,
filler_13:2,
filler_14:1,
filler_15:1,
filler_16:1,
filler_17:8,
filler_18:3,
filler_19:2,
epd_domain :80,
top_level_domain :6,
opt_out_date :8,
filler_20:1,
filler_21:3,
census_county :3,
census_block :1,
census_track :6,
longitude :9,
latitude :9,
filler_22:3,
filler_23:1,
filler_24:1,
filler_25:1,
filler_26:1,
filler_27:1,
filler_28:1,
filler_29:1,
car_make :15,
car_model :30,
car_year :4,
filler_30:1,
filler_31:1,
filler_32:1,
filler_33:1,
filler_34:1,
filler_35:1,
filler_36:1,
filler_37:1,
filler_38:1,
filler_39:1,
filler_40:1,
filler_41:1,
filler_42:1,
filler_43:1,
filler_44:1,
filler_45:1,
filler_46:2,
filler_47:1,
filler_48:1,
filler_49:1,
filler_50:1,
filler_61:1,
filler_62:1,
filler_63:1,
filler_64:1,
filler_65:1,
filler_66:1,
filler_67:1,
filler_68:2,
filler_69:1,
filler_70:1,
filler_71:1,
filler_72:1,
filler_73:1,
filler_74:1,
filler_75:1,
filler_76:2,
filler_77:1,
filler_78:1,
filler_79:1,
filler_80:1,
filler_81:1,
filler_82:1,
filler_83:1,
filler_84:1,
filler_85:1,
filler_86:1,
filler_87:1,
filler_88:1,
filler_89:1,
filler_90:1,
filler_91:1,
filler_92:1,
filler_93:1,
filler_94:1,
filler_95:1,
filler_96:1,
filler_97:1,
filler_98:2,
filler_99:1,
filler_100:1,
filler_101:1,
filler_102:1,
filler_103:1,
filler_104:1,
filler_105:1,
filler_106:1,
filler_107:1,
filler_108:1,
filler_109:1,
filler_110:1,
filler_111:1,
filler_112:1,
filler_113:1,
ah1_mailability_score :2,
filler_114:1,
date_entered_yyyymm :6,
email_domain :20,
url :60,
ipaddress :35,
filler_115:1,
filler_116:6,
filler_117:1,
filler_118:6,
md5_email_lower :32,
md5_email_upper :32,
company_id :12,
individual_id :12,
bv_flag :1,
sha256_email :64,
sha512_email :128,
marigold :1,
filler_119:6,
filler_120:1,
bvt_refresh_date :8,
ipst_status_code :1,
ipst_refresh_date :8,
scf :3,
zip :5,
matchcode_lrfs :21,
filler_121:18,
best_date_yyyymmdd :8,
filler_122:32,
filler_123:18,
reactivation_flag :1,
mgen_match_flag :1,
cbsa :5,
individual_mc :17,
household_mc :15,
consumer_digital_match :1,
bridge_code :1,
best_date_range :1,
email_deliverable :1,
email_marketable :1,
email_reputation_risk :1,
Email_Deployable:1,
filler_124:2'
;

DELETE {email-load-table}
 WHERE opt_out_flag IS NULL OR opt_out_flag <> '0';

DROP TABLE IF EXISTS IGConsumerEmail_Child1;
CREATE TABLE IGConsumerEmail_Child1
(
    open_flag VARCHAR(1) ,
    open_date_yyyymm VARCHAR (6) ,
    click_flag VARCHAR(1),
    click_date_yyyymm VARCHAR (6),
    email_address VARCHAR (80) PRIMARY KEY DISTKEY SORTKEY,
    id INT
);

COPY IGConsumerEmail_Child1
FROM 's3://{s3-internal}{s3-key-child1}' 
IAM_ROLE '{iam}'
FIXEDWIDTH 
'open_flag :1,
open_date_yyyymm :6,
click_flag :1,
click_date_yyyymm :6,
email_address :80,
filler :2' 
;

-- Child2 
-----------------------------------------
DROP TABLE IF EXISTS IGConsumerEmail_Child2;
CREATE TABLE IGConsumerEmail_Child2 
(
    cemail VARCHAR(80) DISTKEY SORTKEY, 
    cvalue VARCHAR(350)
);

COPY IGConsumerEmail_Child2
(
    cemail,
    cvalue
)
FROM 's3://{s3-internal}{s3-key-child2}' 
IAM_ROLE '{iam}'
DELIMITER '|'
;

-- Combine all three
DROP TABLE IF EXISTS ig_consumer_email_new_temp;

CREATE TABLE ig_consumer_email_new_temp
DISTKEY (individual_id)
SORTKEY (individual_id)
AS
SELECT
  a.id AS id,
  a.opt_out_flag AS opt_out_flag,
  a.emailaddress AS emailaddress,
  a.titlecode AS titlecode,
  a.cfirstname AS cfirstname,
  a.middle_initial AS middle_initial,
  a.clastname AS clastname,
  a.caddress1 AS caddress1,
  a.caddress2 AS caddress2,
  a.ccity AS ccity,
  a.state AS state,
  a.postal_code AS postal_code,
  a.vendor_code AS vendor_code,
  a.zip_4 AS zip_4,
  a.delivery_point AS delivery_point,
  a.carrier_route AS carrier_route,
  a.county_code AS county_code,
  a.gender AS gender,
  a.epd_domain AS epd_domain,
  a.top_level_domain AS top_level_domain,
  a.opt_out_date AS opt_out_date,
  a.census_county AS census_county,
  a.census_block AS census_block,
  a.census_track AS census_track,
  a.longitude AS longitude,
  a.latitude AS latitude, 
  a.car_make AS car_make,
  a.car_model AS car_model,
  a.car_year AS car_year,
  a.ah1_mailability_score AS ah1_mailability_score,
  a.date_entered_yyyymm AS date_entered_yyyymm,
  a.email_domain AS email_domain,
  a.url AS url,
  a.ipaddress AS ipaddress, 
  a.md5_email_lower AS md5_email_lower,
  a.md5_email_upper AS md5_email_upper,
  a.company_id AS company_id,
  a.individual_id AS individual_id,
  a.bv_flag AS bv_flag,
  a.sha256_email AS sha256_email,
  a.sha512_email AS sha512_email,
  a.marigold AS marigold, 
  a.bvt_refresh_date AS bvt_refresh_date,
  a.ipst_status_code AS ipst_status_code,
  a.ipst_refresh_date AS ipst_refresh_date,
  a.scf AS scf,
  a.zip AS zip,
  a.matchcode_lrfs AS matchcode_lrfs,
  a.best_date_yyyymmdd AS best_date_yyyymmdd,
  a.reactivation_flag AS reactivation_flag,
  a.mgen_match_flag AS mgen_match_flag,
  a.cbsa AS cbsa,
  a.individual_mc AS individual_mc,
  a.household_mc AS household_mc,
  CASE WHEN a.emailaddress = b.email_address THEN ISNULL(b.open_flag,'') ELSE '' END AS open_flag, 
  CASE WHEN a.emailaddress = b.email_address THEN ISNULL(b.open_date_yyyymm,'') ELSE '' END AS open_date_yyyymm, 
  CASE WHEN a.emailaddress = b.email_address THEN ISNULL(b.click_flag,'') ELSE '' END AS click_flag, 
  CASE WHEN a.emailaddress = b.email_address THEN ISNULL(b.click_date_yyyymm,'') ELSE '' END AS click_date_yyyymm, 
  CASE WHEN a.emailaddress = UPPER(c.cemail) THEN ISNULL(c.cValue,'') ELSE '' END AS categories, 
  a.consumer_digital_match AS consumer_digital_match, 
  a.bridge_code AS bridge_code,
  a.best_date_range AS best_date_range,
  NVL(a.cflag,'') AS cflag,
  a.email_deliverable AS email_deliverable,
  a.email_marketable AS email_marketable,
  a.email_reputation_risk AS email_reputation_risk,
  CASE WHEN a.best_date_yyyymmdd IS NOT NULL AND a.best_date_yyyymmdd <> ''  THEN LEFT(a.best_date_yyyymmdd,6) ELSE '' END AS best_dateyyyymm,
  LEFT(RIGHT('000' + CAST(CAST(a.latitude as INT) as VARCHAR),9),3) + '.' + RIGHT(RIGHT('000' + CAST(CAST(a.latitude as INT) as VARCHAR),9),6) AS flatitude,
  LEFT(RIGHT('000' + CAST(CAST(a.longitude as INT) as VARCHAR),9),3) + '.' + RIGHT(RIGHT('000' + CAST(CAST(a.longitude as INT) as VARCHAR),9),6) AS flongitude,
  a.email_deployable as email_deployable
FROM {email-load-table} a
LEFT JOIN IGConsumerEmail_Child1 b
ON a.emailaddress = b.email_address
LEFT JOIN IGConsumerEmail_Child2 c
ON a.emailaddress = c.cemail;

