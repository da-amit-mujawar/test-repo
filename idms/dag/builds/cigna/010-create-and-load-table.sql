drop table if exists {cigna-stg};

create table {cigna-stg}
(
/*loading fields*/
filler1 varchar(10),
abinumber	varchar(9),
filler2 varchar(47),
companyname	varchar(30),
locationaddress	varchar(30),
locationcity	varchar(18),
locationstate	varchar(2),
locationzipcode	varchar(5),
literaldash	varchar(1),
locationzip4	varchar(4),
primaryphonenumber	varchar(10),
countycode	varchar(3),
presenceofemail 	varchar(1),
fulfillmentflag	varchar(1),
filler3 varchar(29),
employeesizecode	varchar(1),
locationoutputvolumecode	varchar(1),
primarysic	varchar(6),
cons_address	varchar(30),
cons_city	varchar(18),
cons_state_abbr	varchar(2),
cons_zip_code	varchar(5),
cons_literaldash	varchar(1),
cons_zip4	varchar(4),
cons_telephone	varchar(10),
cons_postal_county	varchar(3),
cons_location_type	varchar(1),
cons_gender_code	varchar(1),
cons_age	varchar(2),
cons_incomecode	varchar(1),
cons_name	varchar(30),
cons_marital_status	varchar(1),
cons_creditcardpresence	varchar(1),
cons_owner_renter_status	varchar(1),
filler4 varchar(2),
execureach_quality varchar(2),
grade 	varchar(1),
cons_individuaid	varchar(12),
cons_familyid	varchar(12),
cons_state_code 	varchar(2),
filler5 varchar(20),
/*system fields*/
id int identity unique,
productcode varchar(1),
matchcode varchar(13),
abi_available varchar(1),
state varchar(2),
zip varchar(5),
zip4 varchar(4),
zip9 varchar(9)
);

copy {cigna-stg}
from 's3://{s3-internal}{s3-key1}'
--from  's3://idms-2722-internalfiles/internaltransfer/Cigna/execureach_MultiMatches_4.txt.gz'
iam_role '{iam}'
--iam_role 'arn:aws:iam::250245842722:role/da-idms-redshift-role'
truncatecolumns
acceptinvchars
gzip
fixedwidth
'filler:10,
abinumber:9,
filler:47,
companyname:30,
locationaddress:30,
locationcity:18,
locationstate:2,
locationzipcode:5,
literaldash:1,
locationzip4:4,
primaryphonenumber:10,
countycode:3,
presenceofemail:1,
fulfillmentflag:1,
filler:29,
employeesizecode:1,
locationoutputvolumecode:1,
primarysic:6,
cons_address:30,
cons_city:18,
cons_state_abbr:2,
cons_zip_code:5,
cons_literaldash:1,
cons_zip4:4,
cons_telephone:10,
cons_postal_county:3,
cons_location_type:1,
cons_gender_code:1,
cons_age:2,
cons_incomecode:1,
cons_name:30,
cons_marital_status:1,
cons_creditcardpresence:1,
cons_owner_renter_status:1,
filler:2,
execureach_quality:2,
grade:1,
cons_individuaid:12,
cons_familyid:12,
cons_state_code:2,
filler:2';


copy {cigna-stg}
from 's3://{s3-internal}{s3-key2}'
--from  's3://idms-2722-internalfiles/internaltransfer/Cigna/execureach_SingleMatches'
iam_role '{iam}'
--iam_role 'arn:aws:iam::250245842722:role/da-idms-redshift-role'
truncatecolumns
acceptinvchars
gzip
fixedwidth
'filler:10,
abinumber:9,
filler:47,
companyname:30,
locationaddress:30,
locationcity:18,
locationstate:2,
locationzipcode:5,
literaldash:1,
locationzip4:4,
primaryphonenumber:10,
countycode:3,
presenceofemail:1,
fulfillmentflag:1,
filler:29,
employeesizecode:1,
locationoutputvolumecode:1,
primarysic:6,
cons_address:30,
cons_city:18,
cons_state_abbr:2,
cons_zip_code:5,
cons_literaldash:1,
cons_zip4:4,
cons_telephone:10,
cons_postal_county:3,
cons_location_type:1,
cons_gender_code:1,
cons_age:2,
cons_incomecode:1,
cons_name:30,
cons_marital_status:1,
cons_creditcardpresence:1,
cons_owner_renter_status:1,
filler:2,
execureach_quality:2,
grade:1,
cons_individuaid:12,
cons_familyid:12,
cons_state_code:2,
filler:2';

drop table if exists {cigna};

create table {cigna}
(
abinumber	varchar(9) ENCODE zstd,
companyname	varchar(30) ENCODE zstd,
locationaddress	varchar(30) ENCODE zstd,
locationcity	varchar(18) ENCODE zstd,
locationstate	varchar(2) ENCODE zstd,
locationzipcode	varchar(5) ENCODE zstd,
literaldash	varchar(1) ENCODE zstd,
locationzip4	varchar(4) ENCODE zstd,
primaryphonenumber	varchar(10) ENCODE zstd,
countycode	varchar(3) ENCODE zstd,
presenceofemail 	varchar(1) ENCODE zstd,
fulfillmentflag	varchar(1) ENCODE zstd,
employeesizecode	varchar(1) ENCODE zstd,
locationoutputvolumecode	varchar(1) ENCODE zstd,
primarysic	varchar(6) ENCODE zstd,
cons_address	varchar(30) ENCODE zstd,
cons_city	varchar(18) ENCODE zstd,
cons_state_abbr	varchar(2) ENCODE zstd,
cons_zip_code	varchar(5) ENCODE zstd,
cons_literaldash	varchar(1) ENCODE zstd,
cons_zip4	varchar(4) ENCODE zstd,
cons_telephone	varchar(10) ENCODE zstd,
cons_postal_county	varchar(3) ENCODE zstd,
cons_location_type	varchar(1) ENCODE zstd,
cons_gender_code	varchar(1) ENCODE zstd,
cons_age	varchar(2) ENCODE zstd,
cons_incomecode	varchar(1) ENCODE zstd,
cons_name	varchar(30) ENCODE zstd,
cons_marital_status	varchar(1) ENCODE zstd,
cons_creditcardpresence	varchar(1) ENCODE zstd,
cons_owner_renter_status	varchar(1) ENCODE zstd,
execureach_quality varchar(2) ENCODE zstd,
grade 	varchar(1) ENCODE zstd,
cons_individuaid	varchar(12) ENCODE zstd,
cons_familyid	varchar(12) ENCODE zstd,
cons_state_code 	varchar(2) ENCODE zstd,
id bigint unique distkey sortkey ENCODE  az64,
productcode varchar(1) ENCODE zstd,
matchcode varchar(13) ENCODE zstd,
abi_available varchar(1) ENCODE zstd,
state varchar(2) ENCODE zstd,
zip varchar(5) ENCODE zstd,
zip4 varchar(4) ENCODE zstd,
zip9 varchar(9) ENCODE zstd,
listid int ENCODE az64,
permissiontype varchar(1) ENCODE zstd
)
;

insert into {cigna}
(
  abinumber,
  companyname,
  locationaddress,
  locationcity,
  locationstate,
  locationzipcode,
  literaldash,
  locationzip4,
  primaryphonenumber,
  countycode,
  presenceofemail,
  fulfillmentflag,
  employeesizecode,
  locationoutputvolumecode,
  primarysic,
  cons_address,
  cons_city,
  cons_state_abbr,
  cons_zip_code,
  cons_literaldash,
  cons_zip4,
  cons_telephone,
  cons_postal_county,
  cons_location_type,
  cons_gender_code,
  cons_age,
  cons_incomecode,
  cons_name,
  cons_marital_status,
  cons_creditcardpresence,
  cons_owner_renter_status,
  execureach_quality,
  grade,
  cons_individuaid,
  cons_familyid,
  cons_state_code,
  id,
  productcode,
  matchcode,
  abi_available,
  state,
  zip,
  zip4,
  zip9,
  listid,
  permissiontype
)
select
a.abinumber as abinumber,
a.companyname as companyname,
a.locationaddress as locationaddress,
a.locationcity as locationcity,
a.locationstate as locationstate,
a.locationzipcode as locationzipcode,
a.literaldash as literaldash,
a.locationzip4 as locationzip4,
a.primaryphonenumber as primaryphonenumber,
a.countycode as countycode,
a.presenceofemail as presenceofemail,
a.fulfillmentflag as fulfillmentflag,
a.employeesizecode as employeesizecode,
a.locationoutputvolumecode as locationoutputvolumecode,
a.primarysic as primarysic,
a.cons_address as cons_address,
a.cons_city as cons_city,
a.cons_state_abbr as cons_state_abbr,
a.cons_zip_code as cons_zip_code,
a.cons_literaldash as cons_literaldash,
a.cons_zip4 as cons_zip4,
a.cons_telephone as cons_telephone,
a.cons_postal_county as cons_postal_county,
a.cons_location_type as cons_location_type,
a.cons_gender_code as cons_gender_code,
a.cons_age as cons_age,
a.cons_incomecode as cons_incomecode,
a.cons_name as cons_name,
a.cons_marital_status as cons_marital_status,
a.cons_creditcardpresence as cons_creditcardpresence,
a.cons_owner_renter_status as cons_owner_renter_status,
a.execureach_quality as execureach_quality,
a.grade as grade,
a.cons_individuaid as cons_individuaid,
a.cons_familyid as cons_familyid,
a.cons_state_code as cons_state_code,
a.id as id,
a.productcode as productcode,
a.cons_individuaid + a.grade as matchcode,
case when ltrim(rtrim(a.abinumber)) = '' then 'N' else 'Y' end as abi_available,
a.locationstate as state,
a.locationzipcode as zip,
a.locationzip4 as zip4,
a.locationzipcode + a.locationzip4 as zip9,
14124 as listid,
'R' as permissiontype
  from {cigna-stg} as a
;

drop table if exists {cigna-stg};

