{
    "database_id":"1267,1106,992,1150",
    "email_subject": "IDMS - Royalty Report",
    "email_address" : "abhishek.jangid@data-axle.com",
    "email_message": "Please find attached Royalty Report.<br/><br/>Thank you.",
    "992_fetch" : "/* \n        PROJECT:733243 New Royalty Report - Infogroup US Business: \n        IDMS Enhancement request: 434  for NEW Infogroup US Business Royalty Report (992) \n        PROJECT:733244\n        PROJECT:733246\n        -- ADD OESS number when available... maybe next release CB 20190214\n        -- Created by column empty.... removing from report CB 20190215\n\n        This job workS for 992, 846, 828 reoort - Make sure database ID is changed accordingly\n        SF 3.15.2019\n        */\n\n        \n        DECLARE @lcSQL varchar (8000) =''\n        DECLARE @inString varchar (8000) =''\n        DECLARE @likeString varchar (8000) =''\n        DECLARE @fieldList varchar(800) =''\n        DECLARE @databaseID int\n        DECLARE @BeginDate smalldatetime, @EndDate smalldatetime \n\n\n        BEGIN\n                SET @databaseID = 992   \n        END\n        -- Daily, Weekly or Monthly\n        IF '{mode}' = 'W'\n            BEGIN\n                SET @BeginDate = GETDATE() - 7\n                SET @EndDate   = GETDATE() - 1\n                \n                \n            END\n        ELSE\n            BEGIN\n                IF '{mode}' = 'DR'\n                    BEGIN\n                        SET @BeginDate = '{start_date}'\n                        SET @EndDate = '{end_date}'\n                    END\n                ELSE\n                    BEGIN\n                        IF '{mode}' = 'D'\n                            BEGIN\n                                SET @BeginDate = GETDATE() - 1\n                                SET @EndDate   = GETDATE() - 0\n                            END\n                        ELSE\n                            --Default Monthly\n                             BEGIN\n                                SET @BeginDate  = DATEADD(month, DATEDIFF(month, 0, EOMONTH(GETDATE(), -1)), 0)\n                                SET @EndDate    = EOMONTH(GETDATE(), -1) \n                             END\n                    END\n            END\n\n        --Weekly \n        --SET @BeginDate=DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -8)\n        /*\n        SET @BeginDate=DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -6)\n        SET @EndDate =DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0.9999999)\n        */\n\n\n        --For one time report only remove!!!!\n        --SET @BeginDate ='2020-10-18' --DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -7)\n        --SET @EndDate   ='2020-10-24'\n\n        --Get the list of all orders for the time frame and database\n        DROP TABLE IF EXISTS #OrderIds;\n        CREATE TABLE #OrderIds  (Orderid int  , ContactFlag Varchar(1) NULL,  EmailFlag Varchar(1)NULL, Shipdate varchar(10) NULL   );\n\n        INSERT INTO #OrderIds (Orderid, ContactFlag, EmailFlag,Shipdate  )\n        SELECT DISTINCT O.ID, 'N', 'N',   CONVERT(VARCHAR(10),OS.dCreatedDate, 102) as Shipdate\n            FROM DW_ADMIN.DBO.tblOrder O with (nolock) \n            JOIN DW_Admin.dbo.tblBuild B with (nolock)  ON O.BuildId=B.id\n            JOIN DW_Admin.dbo.tblDatabase Dat with (nolock)  on B.DatabaseID=Dat.Id\n            JOIN DW_Admin.dbo.tblOrderStatus OS with (nolock)  on OS.OrderID= O.Id \n        WHERE OS.iStatus=130  AND OS.iIsCurrent=1  \n        --AND (OS.dCreatedDate >=@BeginDate AND OS.dCreatedDate <= @EndDate  )   \n        AND (OS.dCreatedDate BETWEEN @BeginDate AND @EndDate )   \n        --AND (OS.dCreatedDate BETWEEN '2021.05.10' AND '2021.11.10' )\n        AND Dat.Id=@databaseID  \n        ORDER BY  O.ID\n\n        /*\n        Logic:\n        check Order filter  for the fields Check Export ExportLayout for the fields\n        we will check Vendor_ID   <>36 in IQ.\n        */ \n        IF @databaseID = 992\n            UPDATE #OrderIds\n                SET ContactFlag = 'Y'\n                FROM #OrderIds AS A \n            JOIN dw_admin.dbo.tblOrderExportLayout  ELD with (nolock)  ON ELD.OrderID=A.Orderid\n            Where ContactFlag <> 'Y'\n                AND    ( \n                    ELD.cFieldName in ('FULLNAME','FIRSTNAME','LASTNAME')\n                    OR  ( \n                        ELD.cCalculation like '%FULLNAME%'  \n                        OR ELD.cCalculation like '%FIRSTNAME%' \n                        OR ELD.cCalculation like '%LASTNAME%' \n                        )\n                        )\n        /* STEP3  Update EmailFlag for 992, 846 and 828\n        Condition: EmailVendor = to Yes if any of these email fields were used for selection or exported and Vendor_ID was not equal to 36, \n        then include this order on the report and provide a tally by Vendor_ID\n\n        Logic:\n        check Order filter  for the fields\n        Check Export ExportLayout for the fields\n        we will check Vendor_ID   <>36 in IQ.\n        */   \n\n        SET @fieldList = CASE  @databaseID \n            WHEN 992 THEN 'EmailAddress,MD5Upper,MD5Lower,MD5SaltedHash,SHA2_512_Email_Lower,SHA256Lower,SHA256Upperr,TITLE_DESCRIPTION_Email,LiteralTitle_ID'\n            WHEN 846 THEN 'Email_Address_LRFS,MD5Upper_LRFS,MD5Lower_LRFS,MD5SaltedHash,SHA256Lower,SHA256Upper,TITLE_DESCRIPTION_LRFS'\n            WHEN 828 THEN 'Email_Address'\n            WHEN 969 THEN 'Email_Address'\n            END\n        \n        IF charindex(',', @fieldList, 0)=0 and len(@fieldList)>0\n            BEGIN\n            set @likeString = 'ELD.cCalculation like ''' + '%' + @fieldList + '%' + ''''\n            set @inString =  '''' + @fieldList + ''''\n            END\n        ELSE    \n            BEGIN\n                While charindex(',', @fieldList, 0)>0 and len(@fieldList)>0\n                begin\n                If @likeString=''\n                    begin\n                    set @likeString = 'ELD.cCalculation like ''' + '%' + left(@fieldList, charindex(',', @fieldList, 0)-1) + '%' + ''''\n                    set @inString =  '''' + left(@fieldList, charindex(',', @fieldList, 0)-1) + ''''\n                    end\n                else\n                    begin\n                        set @likeString = @likeString + ' OR ELD.cCalculation like ''' + '%' +  left(@fieldList, charindex(',', @fieldList, 0)-1) + '%' + ''''\n                        set @inString = @inString + ',' + '''' + left(@fieldList, charindex(',', @fieldList, 0)-1) + ''''\n                    end\n                    set @fieldList = right(@fieldList, (len(@fieldList)-charindex(',', @fieldList, 0)))\n                end\n\n                IF len(@fieldList)>0\n                SET   @likeString = @likeString + ' OR ELD.cCalculation like ''' + '%' +  @fieldList + '%' + ''''\n                SET  @inString = @inString  + ',' + '''' + @fieldList + ''''\n            END\n        --SF: update emailflag to yes if any of the fields in the list is included in the segment\n        SET @lcSQL = ' UPDATE #OrderIds SET EmailFlag =''' + 'Y' + ''' FROM #OrderIds AS A JOIN dw_admin.dbo.tblsegment SL with (nolock)  ON SL.OrderID=A.Orderid ' +\n                ' JOIN dw_admin.dbo.tblsegmentselection SS with (nolock) ON SL.ID=SS.SegmentID ' +\n                ' Where EmailFlag <> ''' + 'Y' + ''' AND SS.cQuestionFieldName in ($inString$) '\n                \n        SET @lcSQL=replace(@lcSQL, '$inString$', @inString)\n        SELECT @lcSQL\n        EXEC(@lcSQL)\n\n        --Check Export ExportLayout for the fields\n        --SF: update emailflag to yes if any of the fields in the list is in the layout or used for calculation\n        SET @lcSQL = 'UPDATE #OrderIds SET EmailFlag = ''' + 'Y' + ''' FROM #OrderIds AS A JOIN dw_admin.dbo.tblOrderExportLayout  ELD with (nolock)  ON ELD.OrderID=A.Orderid ' +\n            'Where  EmailFlag <> ''' + 'Y' + ''' AND (ELD.cFieldName in ($inString$) ' +\n            'OR  ($likeString$))'\n        SET @lcSQL=replace(@lcSQL, '$inString$', @inString)\n        SET @lcSQL=replace(@lcSQL, '$likeString$', @likeString)\n        EXEC(@lcSQL)\n        SELECT @lcSQL\n\n        DROP TABLE IF EXISTS #OrderIdWithExportFields;\n        CREATE TABLE #OrderIdWithExportFields\n        (\n            OrderId varchar(10) NULL,\n            cTableName varchar(50) NOT NULL,\n            ContactFlag Varchar(1) NULL,\n            EmailFlag Varchar(1) NULL,\n        --  CreatedBy varchar(50) NULL,\n            ShippedBy varchar(50) NULL,\n            Mailer varchar(100) NULL, \n            cNextMarkOrderNo varchar(50) NULL,\n            PO varchar(50) NULL,\n            OrderDescription varchar(50) NULL,\n            ListName varchar(50) NULL,\n            OrderQty varchar(12) NULL,\n            ShipDate varchar(10) NULL,\n            cNotes varchar(100) NULL, \n            OESSOrderID varchar(30) NULL,\n            OESSAccountNumber varchar(30) NULL,\n            OESSInvoiceTotal varchar(12) NULL,\n            SalesRepName varchar (50) NULL,\n            DivisionNumber varchar (50) NULL\n        ); \n\n        INSERT INTO  #OrderIdWithExportFields\n        (\n            OrderId,\n            cTableName,\n            ContactFlag,\n            EmailFlag, \n        --  CreatedBy,\n            ShippedBy,\n            Mailer,\n            cNextMarkOrderNo, \n            PO,\n            OrderDescription, \n            ListName,   \n            OrderQTY,\n            ShipDate,\n        --  cNotes, \n            OESSOrderID,\n            OESSAccountNumber,\n            OESSInvoiceTotal,\n            SalesRepName,\n            DivisionNumber,\n            cNotes\n            )\n            SELECT distinct\n                O.Id  as  Orderid,\n                BT.cTableName as  cTableName , \n                tempOrderid.ContactFlag,\n                tempOrderid.EmailFlag,\n            --    '' As CreatedBy,\n                U.cFirstName + ' ' + U.cLastName AS ShippedBy,\n                CASE WHEN (Divm.ID is NOT NULL) THEN Divm.cCompany ELSE ML.cCompany END as Mailer,  \n                O.cNextMarkOrderNo, \n                O.cLVaOrderNo as PO,\n                O.cDescription as OrderDescription,\n                Dat.cDatabaseName as ListName,\n                O.iProvidedCount as OrderQTY,\n                CONVERT(VARCHAR(12),OS.dCreatedDate,101) as ShipDate,\n                OB.OESSOrderID as OESSOrderID,\n                OB.cOESSAccountNumber as OESSAccountNumber,\n                CAST(OB.iOESSInvoiceTotal AS VARCHAR(12)) as OESSInvoiceTotal,\n                S.cSalesRepName as SalesRepName,\n                S.cDivisionNo as DivisionNumber,\n                Left(O.cNotes,100) as cNotes\n            from #OrderIds tempOrderid \n                inner join DW_Admin.dbo.tblOrder O On tempOrderid.Orderid = O.id\n                JOIN DW_Admin.dbo.tblBuild B  ON O.BuildId=B.id\n                JOIN DW_Admin.dbo.tblDatabase Dat  on B.DatabaseID=Dat.Id\n                JOIN DW_Admin.dbo.tblDivision Div  ON Dat.DivisionID=Div.Id\n                LEFT OUTER JOIN dw_admin.dbo.tblDivisionMailer Divm ON O.DivisionMailerID  = Divm.ID AND O.DivisionMailerID <> 0\n                LEFT OUTER JOIN dw_admin.dbo.tblMailer ML  ON Dat.Id =ML.DatabaseID\n                JOIN DW_Admin.dbo.tblOrderStatus OS  on O.id=OS.OrderID\n                JOIN DW_Admin.dbo.tbluser U  on OS.cCreatedBy=U.cUserID\n                JOIN DW_Admin.dbo.tblBuildTable BT  ON B.id=BT.BuildID\n                LEFT OUTER JOIN DW_Admin.dbo.tblOrderBilling OB  ON O.id=OB.OrderID                 --newly added fields\n                LEFT OUTER JOIN DW_Admin.dbo.tblSalesRep S on OB.cSalesRepID=S.cSalesRepID  --newly addred fields   \n            WHERE (EmailFlag='Y' OR ContactFlag='Y') AND OS.iStatus=130  AND OS.iIsCurrent=1\n            and BT.cTableName like 'tblMain%'  \n        \n\n        --Staging table for IQ export\n        DROP TABLE IF EXISTS ##RoyaltyTemp_@databaseID_ToBeDropped;\n        Select * \n        INTO ##RoyaltyTemp_@databaseID_ToBeDropped  \n        from #OrderIdWithExportFields; \n\n         -- Task 3 Started\n        DROP Table IF EXISTS ##RoyaltyOrderIds_@databaseID_ToBeDropped;\n        \n        SELECT Orderid,\n        cTableName,\n        ContactFlag, \n        EmailFlag,\n        --CreatedBy, \n        ShippedBy,\n        REPLACE (Mailer,'|','') AS Mailer,                   \n        cNextMarkOrderNo,\n        PO,\n        REPLACE (OrderDescription,'|','') AS OrderDescription,\n        ListName,\n        OrderQty,\n        ShipDate,\n    --  LEFT(REPLACE(REPLACE(REPLACE(cNotes,'|',''),char(13),''),char(10),''),100) AS cNotes,\n        CASE WHEN OESSOrderID IS NULL THEN '' ELSE OESSOrderID END AS OESSOrderID,\n        CASE WHEN OESSAccountNumber IS NULL THEN '' ELSE OESSAccountNumber END AS OESSAccountNumber, \n        CASE WHEN OESSInvoiceTotal IS NULL THEN '' ELSE OESSInvoiceTotal END AS OESSInvoiceTotal,\n        CASE WHEN SalesRepName IS NULL THEN '' ELSE SalesRepName END AS SalesRepName,\n        CASE WHEN DivisionNumber IS NULL THEN '' ELSE DivisionNumber END AS DivisionNumber, \n        LEFT(REPLACE(REPLACE(REPLACE(cNotes,'|',''),char(13),''),char(10),''),100) AS cNotes\n        INTO ##RoyaltyOrderIds_@databaseID_ToBeDropped\n        FROM ##RoyaltyTemp_@databaseID_ToBeDropped;",
    "1267_fetch" : "/* \n        Database: 1267\n        Field Name: Vendor_Code\n        Frequency: Weekly\n        Distribution List: DataAcqGroup@infogroup.com, Cory.Pawloski@infogroup.com, DL-IDMSAdminInfogroup@infogroup.com\n        One thing we need to keep in mind, is that Vendor_Code will not be populated 100%. We should include a row in the report for blank vendor codes, so Cory knows how many records on the order were Infogroup records.\n        \n        Same Columns as 992’s report\n        \n        ShippedBy\n        Orderid\n        Mailer\n        cNextMarkOrderNo\n        PO\n        OrderDescription\n        Listname\n        OrderQty\n        ShipDate\n        FieldName\n        FieldValue\n        Qty Shipped\n        Contact Vendor\n        Email Vendor\n        OESSOrderID\n        OESSAccountNumber\n        OESSInvoiceTotal\n        SalesRepName\n        DivisionNumber\n        \n        SF 10.25.2019\n        */\n\n        \n        DECLARE @lcSQL varchar (8000) =''\n        DECLARE @inString varchar (8000) =''\n        DECLARE @likeString varchar (8000) =''\n        DECLARE @fieldList varchar(800) =''\n        DECLARE @databaseID int\n        DECLARE @BeginDate smalldatetime, @EndDate smalldatetime \n\n        BEGIN\n                SET @databaseID = {db_id}   \n        END\n\n        -- Daily, Weekly or Monthly\n        IF '{mode}' = 'W'\n            BEGIN\n                SET @BeginDate = GETDATE() - 7\n                SET @EndDate   = GETDATE() - 1\n                \n                \n            END\n        ELSE\n            BEGIN\n                IF '{mode}' = 'DR'\n                    BEGIN\n                        SET @BeginDate = '{start_date}'\n                        SET @EndDate = '{end_date}'\n                    END\n                ELSE\n                    BEGIN\n                        IF '{mode}' = 'D'\n                            BEGIN\n                                SET @BeginDate = GETDATE() - 1\n                                SET @EndDate   = GETDATE() - 0\n                            END\n                        ELSE\n                            --Default Monthly\n                             BEGIN\n                                SET @BeginDate  = DATEADD(month, DATEDIFF(month, 0, EOMONTH(GETDATE(), -1)), 0)\n                                SET @EndDate    = EOMONTH(GETDATE(), -1) \n                             END\n                    END\n            END\n\n\n        --Weekly \n        --SET @BeginDate=DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -8)\n        /*\n        SET @BeginDate=DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -6)\n        SET @EndDate =DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0.9999999)\n        */\n\n\n\n        --For one time report only remove!!!!\n        --SET @BeginDate ='2020-10-18' --DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -7)\n        --SET @EndDate   ='2020-10-24'\n\n        --Get the list of all orders for the time frame and database\n        DROP TABLE IF EXISTS #OrderIds;\n        CREATE TABLE #OrderIds  (Orderid int  , ContactFlag Varchar(1) NULL,  EmailFlag Varchar(1)NULL, Shipdate varchar(10) NULL   );\n\n        INSERT INTO #OrderIds (Orderid, ContactFlag, EmailFlag,Shipdate  )\n        SELECT DISTINCT O.ID, 'N', 'N',   CONVERT(VARCHAR(10),OS.dCreatedDate, 102) as Shipdate\n            FROM DW_ADMIN.DBO.tblOrder O with (nolock) \n            JOIN DW_Admin.dbo.tblBuild B with (nolock)  ON O.BuildId=B.id\n            JOIN DW_Admin.dbo.tblDatabase Dat with (nolock)  on B.DatabaseID=Dat.Id\n            JOIN DW_Admin.dbo.tblOrderStatus OS with (nolock)  on OS.OrderID= O.Id \n        WHERE OS.iStatus=130  AND OS.iIsCurrent=1  \n        --AND (OS.dCreatedDate >=@BeginDate AND OS.dCreatedDate <= @EndDate  )   \n        AND (OS.dCreatedDate BETWEEN @BeginDate AND @EndDate )   \n        --AND (OS.dCreatedDate BETWEEN '2021.05.10' AND '2021.10.21' )\n        AND Dat.Id=@databaseID  \n        ORDER BY  O.ID;\n\n        /*\n        Logic:\n        check Order filter  for the fields Check Export ExportLayout for the fields\n        we will check Vendor_ID   <>36 in IQ.\n        */   \n\n        --update emailflag to yes if any of the royalty fields included in selection on the segment\n        UPDATE #OrderIds SET EmailFlag ='Y' FROM #OrderIds AS A JOIN dw_admin.dbo.tblsegment SL with (nolock) \n        ON SL.OrderID=A.Orderid JOIN dw_admin.dbo.tblsegmentselection SS with (nolock) \n        ON SL.ID=SS.SegmentID  Where EmailFlag <> 'Y' AND SS.cQuestionFieldName='EmailAddress' \n\n        --update emailflag to yes if any of the fields in the list is in the layout or used for calculation\n        UPDATE #OrderIds SET EmailFlag = 'Y' FROM #OrderIds AS A JOIN dw_admin.dbo.tblOrderExportLayout ELD with (nolock)\n        ON ELD.OrderID=A.Orderid Where  EmailFlag <> 'Y' AND (ELD.cFieldName='EmailAddress' OR  ELD.cCalculation like '%EmailAddress%')\n\n\n        DROP TABLE IF EXISTS #OrderIdWithExportFields;\n        CREATE TABLE #OrderIdWithExportFields\n        (\n            OrderId varchar(10) NULL,\n            cTableName varchar(50) NOT NULL,\n            ContactFlag Varchar(1) NULL,\n            EmailFlag Varchar(1) NULL,\n        --  CreatedBy varchar(50) NULL,\n            ShippedBy varchar(50) NULL,\n            Mailer varchar(100) NULL, \n            cNextMarkOrderNo varchar(50) NULL,\n            PO varchar(50) NULL,\n            OrderDescription varchar(50) NULL,\n            ListName varchar(50) NULL,\n            OrderQty varchar(12) NULL,\n            ShipDate varchar(10) NULL,\n            cNotes varchar(100) NULL, \n            OESSOrderID varchar(30) NULL,\n            OESSAccountNumber varchar(30) NULL,\n            OESSInvoiceTotal varchar(12) NULL,\n            SalesRepName varchar (50) NULL,\n            DivisionNumber varchar (50) NULL\n        ); \n\n        INSERT INTO  #OrderIdWithExportFields\n        (\n            OrderId,\n            cTableName,\n            ContactFlag,\n            EmailFlag, \n        --  CreatedBy,\n            ShippedBy,\n            Mailer,\n            cNextMarkOrderNo, \n            PO,\n            OrderDescription, \n            ListName,   \n            OrderQTY,\n            ShipDate,\n        --  cNotes, \n            OESSOrderID,\n            OESSAccountNumber,\n            OESSInvoiceTotal,\n            SalesRepName,\n            DivisionNumber,\n            cNotes\n            )\n            SELECT distinct\n                O.Id  as  Orderid,\n                BT.cTableName as  cTableName , \n                tempOrderid.ContactFlag,\n                tempOrderid.EmailFlag,\n            --    '' As CreatedBy,\n                U.cFirstName + ' ' + U.cLastName AS ShippedBy,\n                CASE WHEN (Divm.ID is NOT NULL) THEN Divm.cCompany ELSE ML.cCompany END as Mailer,  \n                O.cNextMarkOrderNo, \n                O.cLVaOrderNo as PO,\n                O.cDescription as OrderDescription,\n                Dat.cDatabaseName as ListName,\n                O.iProvidedCount as OrderQTY,\n                CONVERT(VARCHAR(12),OS.dCreatedDate,101) as ShipDate,\n                OB.OESSOrderID as OESSOrderID,\n                OB.cOESSAccountNumber as OESSAccountNumber,\n                CAST(OB.iOESSInvoiceTotal AS VARCHAR(12)) as OESSInvoiceTotal,\n                S.cSalesRepName as SalesRepName,\n                S.cDivisionNo as DivisionNumber,\n                Left(O.cNotes,100) as cNotes\n            from #OrderIds tempOrderid \n                inner join DW_Admin.dbo.tblOrder O On tempOrderid.Orderid = O.id\n                JOIN DW_Admin.dbo.tblBuild B  ON O.BuildId=B.id\n                JOIN DW_Admin.dbo.tblDatabase Dat  on B.DatabaseID=Dat.Id\n                JOIN DW_Admin.dbo.tblDivision Div  ON Dat.DivisionID=Div.Id\n                LEFT OUTER JOIN dw_admin.dbo.tblDivisionMailer Divm ON O.DivisionMailerID  = Divm.ID AND O.DivisionMailerID <> 0\n                LEFT OUTER JOIN dw_admin.dbo.tblMailer ML  ON Dat.Id =ML.DatabaseID\n                JOIN DW_Admin.dbo.tblOrderStatus OS  on O.id=OS.OrderID\n                JOIN DW_Admin.dbo.tbluser U  on OS.cCreatedBy=U.cUserID\n                JOIN DW_Admin.dbo.tblBuildTable BT  ON B.id=BT.BuildID\n                LEFT OUTER JOIN DW_Admin.dbo.tblOrderBilling OB  ON O.id=OB.OrderID                 --newly added fields\n                LEFT OUTER JOIN DW_Admin.dbo.tblSalesRep S on OB.cSalesRepID=S.cSalesRepID  --newly addred fields   \n            WHERE  OS.iStatus=130  AND OS.iIsCurrent=1 --(EmailFlag='Y' OR ContactFlag='Y') AND\n            and BT.cTableName like 'tblMain%'  \n            \n            /*\n            UNION\n            \n                SELECT distinct\n                O.Id  as  Orderid,\n                BT.cTableName + '_ToBeDropped' as  cTableName , \n                tempOrderid.ContactFlag,\n                tempOrderid.EmailFlag,\n            --    '' As CreatedBy,\n                U.cFirstName + ' ' + U.cLastName AS ShippedBy,\n                CASE WHEN (Divm.ID is NOT NULL) THEN Divm.cCompany ELSE ML.cCompany END as Mailer,  \n                O.cNextMarkOrderNo, \n                O.cLVaOrderNo as PO,\n                O.cDescription as OrderDescription,\n                Dat.cDatabaseName as ListName,\n                O.iProvidedCount as OrderQTY,\n                CONVERT(VARCHAR(12),OS.dCreatedDate,101) as ShipDate,\n                OB.OESSOrderID as OESSOrderID,\n                OB.cOESSAccountNumber as OESSAccountNumber,\n                CAST(OB.iOESSInvoiceTotal AS VARCHAR(12)) as OESSInvoiceTotal,\n                S.cSalesRepName as SalesRepName,\n                S.cDivisionNo as DivisionNumber,\n                Left(O.cNotes,100) as cNotes\n            from #OrderIds tempOrderid \n                inner join DW_Admin.dbo.tblOrder O On tempOrderid.Orderid = O.id\n                JOIN DW_Admin.dbo.tblBuild B  ON O.BuildId=B.id\n                JOIN DW_Admin.dbo.tblDatabase Dat  on B.DatabaseID=Dat.Id\n                JOIN DW_Admin.dbo.tblDivision Div  ON Dat.DivisionID=Div.Id\n                LEFT OUTER JOIN dw_admin.dbo.tblDivisionMailer Divm ON O.DivisionMailerID  = Divm.ID AND O.DivisionMailerID <> 0\n                LEFT OUTER JOIN dw_admin.dbo.tblMailer ML  ON Dat.Id =ML.DatabaseID\n                JOIN DW_Admin.dbo.tblOrderStatus OS  on O.id=OS.OrderID\n                JOIN DW_Admin.dbo.tbluser U  on OS.cCreatedBy=U.cUserID\n                JOIN DW_Admin.dbo.tblBuildTable BT  ON B.id=BT.BuildID\n                LEFT OUTER JOIN DW_Admin.dbo.tblOrderBilling OB  ON O.id=OB.OrderID                 --newly added fields\n                LEFT OUTER JOIN DW_Admin.dbo.tblSalesRep S on OB.cSalesRepID=S.cSalesRepID  --newly addred fields   \n            WHERE  OS.iStatus=130  AND OS.iIsCurrent=1 --(EmailFlag='Y' OR ContactFlag='Y') AND\n            and BT.cTableName like 'tblMain%' \n        */\n\n        --Staging table for IQ export\n        DROP TABLE IF EXISTS ##RoyaltyTemp_@databaseID_ToBeDropped;\n        Select * \n        INTO ##RoyaltyTemp_@databaseID_ToBeDropped  \n        from #OrderIdWithExportFields; \n\n         -- Task 3 Started\n        DROP Table IF EXISTS ##RoyaltyOrderIds_@databaseID_ToBeDropped;\n        \n        SELECT Orderid,\n        cTableName,\n        ContactFlag, \n        EmailFlag,\n        --CreatedBy, \n        ShippedBy,\n        REPLACE (Mailer,'|','') AS Mailer,                   \n        cNextMarkOrderNo,\n        PO,\n        REPLACE (OrderDescription,'|','') AS OrderDescription,\n        ListName,\n        OrderQty,\n        ShipDate,\n    --  LEFT(REPLACE(REPLACE(REPLACE(cNotes,'|',''),char(13),''),char(10),''),100) AS cNotes,\n        CASE WHEN OESSOrderID IS NULL THEN '' ELSE OESSOrderID END AS OESSOrderID,\n        CASE WHEN OESSAccountNumber IS NULL THEN '' ELSE OESSAccountNumber END AS OESSAccountNumber, \n        CASE WHEN OESSInvoiceTotal IS NULL THEN '' ELSE OESSInvoiceTotal END AS OESSInvoiceTotal,\n        CASE WHEN SalesRepName IS NULL THEN '' ELSE SalesRepName END AS SalesRepName,\n        CASE WHEN DivisionNumber IS NULL THEN '' ELSE DivisionNumber END AS DivisionNumber, \n        LEFT(REPLACE(REPLACE(REPLACE(cNotes,'|',''),char(13),''),char(10),''),100) AS cNotes\n        INTO ##RoyaltyOrderIds_@databaseID_ToBeDropped\n        FROM ##RoyaltyTemp_@databaseID_ToBeDropped; ",
    "1106_fetch" : "/* \n        Database: 1106\n        Field Name: EmailSource\n        Frequency: Weekly\n        Distribution List: DataAcqGroup@infogroup.com, Cory.Pawloski@infogroup.com, DL-IDMSAdminInfogroup@infogroup.com\n        One thing we need to keep in mind, is that Vendor_Code will not be populated 100%. We should include a row in the report for blank vendor codes, so Cory knows how many records on the order were Infogroup records.\n        \n        Same Columns as 992’s report\n        \n        ShippedBy\n        Orderid\n        Mailer\n        cNextMarkOrderNo\n        PO\n        OrderDescription\n        Listname\n        OrderQty\n        ShipDate\n        FieldName\n        FieldValue\n        Qty Shipped\n        Contact Vendor\n        Email Vendor\n        OESSOrderID\n        OESSAccountNumber\n        OESSInvoiceTotal\n        SalesRepName\n        DivisionNumber\n        \n        SF 10.25.2019\n        */\n\n        \n        DECLARE @lcSQL varchar (8000) =''\n        DECLARE @inString varchar (8000) =''\n        DECLARE @likeString varchar (8000) =''\n        DECLARE @fieldList varchar(800) =''\n        DECLARE @databaseID int\n        DECLARE @BeginDate smalldatetime, @EndDate smalldatetime \n\n        BEGIN\n                SET @databaseID = 1106   \n        END\n\n        -- Daily, Weekly or Monthly\n        IF '{mode}' = 'W'\n            BEGIN\n                SET @BeginDate = GETDATE() - 7\n                SET @EndDate   = GETDATE() - 1\n                \n                \n            END\n        ELSE\n            BEGIN\n                IF '{mode}' = 'DR'\n                    BEGIN\n                        SET @BeginDate = '{start_date}'\n                        SET @EndDate = '{end_date}'\n                    END\n                ELSE\n                    BEGIN\n                        IF '{mode}' = 'D'\n                            BEGIN\n                                SET @BeginDate = GETDATE() - 1\n                                SET @EndDate   = GETDATE() - 0\n                            END\n                        ELSE\n                            --Default Monthly\n                             BEGIN\n                                SET @BeginDate  = DATEADD(month, DATEDIFF(month, 0, EOMONTH(GETDATE(), -1)), 0)\n                                SET @EndDate    = EOMONTH(GETDATE(), -1) \n                             END\n                    END\n            END\n\n        --Weekly \n        --SET @BeginDate=DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -8)\n        /*\n        SET @BeginDate=DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -6)\n        SET @EndDate =DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0.9999999)\n        */\n\n\n\n        --For one time report only remove!!!!\n        --SET @BeginDate ='2020-10-18' --DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -7)\n        --SET @EndDate   ='2020-10-24'\n\n        --Get the list of all orders for the time frame and database\n        DROP TABLE IF EXISTS #OrderIds;\n        CREATE TABLE #OrderIds  (Orderid int  , ContactFlag Varchar(1) NULL,  EmailFlag Varchar(1)NULL, Shipdate varchar(10) NULL   );\n\n        INSERT INTO #OrderIds (Orderid, ContactFlag, EmailFlag,Shipdate  )\n        SELECT DISTINCT O.ID, 'N', 'N',   CONVERT(VARCHAR(10),OS.dCreatedDate, 102) as Shipdate\n            FROM DW_ADMIN.DBO.tblOrder O with (nolock) \n            JOIN DW_Admin.dbo.tblBuild B with (nolock)  ON O.BuildId=B.id\n            JOIN DW_Admin.dbo.tblDatabase Dat with (nolock)  on B.DatabaseID=Dat.Id\n            JOIN DW_Admin.dbo.tblOrderStatus OS with (nolock)  on OS.OrderID= O.Id \n        WHERE OS.iStatus=130  AND OS.iIsCurrent=1  \n        --AND (OS.dCreatedDate >=@BeginDate AND OS.dCreatedDate <= @EndDate  )   \n        AND (OS.dCreatedDate BETWEEN @BeginDate AND @EndDate )   \n        --AND (OS.dCreatedDate BETWEEN '2021.05.10' AND '2021.10.21' )\n        AND Dat.Id=@databaseID  \n        ORDER BY  O.ID\n\n        /*\n        Logic:\n        check Order filter  for the fields Check Export ExportLayout for the fields\n        we will check Vendor_ID   <>36 in IQ.\n        */   \n\n        --update emailflag to yes if any of the royalty fields included in selection on the segment\n        UPDATE #OrderIds SET EmailFlag ='Y' FROM #OrderIds AS A JOIN dw_admin.dbo.tblsegment SL with (nolock) \n        ON SL.OrderID=A.Orderid JOIN dw_admin.dbo.tblsegmentselection SS with (nolock) \n        ON SL.ID=SS.SegmentID  Where EmailFlag <> 'Y' AND SS.cQuestionFieldName='EmailAddress' \n\n        --update emailflag to yes if any of the fields in the list is in the layout or used for calculation\n        UPDATE #OrderIds SET EmailFlag = 'Y' FROM #OrderIds AS A JOIN dw_admin.dbo.tblOrderExportLayout ELD with (nolock)\n        ON ELD.OrderID=A.Orderid Where  EmailFlag <> 'Y' AND (ELD.cFieldName='EmailAddress' OR  ELD.cCalculation like '%EmailAddress%')\n\n\n        DROP TABLE IF EXISTS #OrderIdWithExportFields;\n        CREATE TABLE #OrderIdWithExportFields\n        (\n            OrderId varchar(10) NULL,\n            cTableName varchar(50) NOT NULL,\n            ContactFlag Varchar(1) NULL,\n            EmailFlag Varchar(1) NULL,\n        --  CreatedBy varchar(50) NULL,\n            ShippedBy varchar(50) NULL,\n            Mailer varchar(100) NULL, \n            cNextMarkOrderNo varchar(50) NULL,\n            PO varchar(50) NULL,\n            OrderDescription varchar(50) NULL,\n            ListName varchar(50) NULL,\n            OrderQty varchar(12) NULL,\n            ShipDate varchar(10) NULL,\n            cNotes varchar(100) NULL, \n            OESSOrderID varchar(30) NULL,\n            OESSAccountNumber varchar(30) NULL,\n            OESSInvoiceTotal varchar(12) NULL,\n            SalesRepName varchar (50) NULL,\n            DivisionNumber varchar (50) NULL\n        ); \n\n        INSERT INTO  #OrderIdWithExportFields\n        (\n            OrderId,\n            cTableName,\n            ContactFlag,\n            EmailFlag, \n        --  CreatedBy,\n            ShippedBy,\n            Mailer,\n            cNextMarkOrderNo, \n            PO,\n            OrderDescription, \n            ListName,   \n            OrderQTY,\n            ShipDate,\n        --  cNotes, \n            OESSOrderID,\n            OESSAccountNumber,\n            OESSInvoiceTotal,\n            SalesRepName,\n            DivisionNumber,\n            cNotes\n            )\n            SELECT distinct\n                O.Id  as  Orderid,\n                BT.cTableName as  cTableName , \n                tempOrderid.ContactFlag,\n                tempOrderid.EmailFlag,\n            --    '' As CreatedBy,\n                U.cFirstName + ' ' + U.cLastName AS ShippedBy,\n                CASE WHEN (Divm.ID is NOT NULL) THEN Divm.cCompany ELSE ML.cCompany END as Mailer,  \n                O.cNextMarkOrderNo, \n                O.cLVaOrderNo as PO,\n                O.cDescription as OrderDescription,\n                Dat.cDatabaseName as ListName,\n                O.iProvidedCount as OrderQTY,\n                CONVERT(VARCHAR(12),OS.dCreatedDate,101) as ShipDate,\n                OB.OESSOrderID as OESSOrderID,\n                OB.cOESSAccountNumber as OESSAccountNumber,\n                CAST(OB.iOESSInvoiceTotal AS VARCHAR(12)) as OESSInvoiceTotal,\n                S.cSalesRepName as SalesRepName,\n                S.cDivisionNo as DivisionNumber,\n                Left(O.cNotes,100) as cNotes\n            from #OrderIds tempOrderid \n                inner join DW_Admin.dbo.tblOrder O On tempOrderid.Orderid = O.id\n                JOIN DW_Admin.dbo.tblBuild B  ON O.BuildId=B.id\n                JOIN DW_Admin.dbo.tblDatabase Dat  on B.DatabaseID=Dat.Id\n                JOIN DW_Admin.dbo.tblDivision Div  ON Dat.DivisionID=Div.Id\n                LEFT OUTER JOIN dw_admin.dbo.tblDivisionMailer Divm ON O.DivisionMailerID  = Divm.ID AND O.DivisionMailerID <> 0\n                LEFT OUTER JOIN dw_admin.dbo.tblMailer ML  ON Dat.Id =ML.DatabaseID\n                JOIN DW_Admin.dbo.tblOrderStatus OS  on O.id=OS.OrderID\n                JOIN DW_Admin.dbo.tbluser U  on OS.cCreatedBy=U.cUserID\n                JOIN DW_Admin.dbo.tblBuildTable BT  ON B.id=BT.BuildID\n                LEFT OUTER JOIN DW_Admin.dbo.tblOrderBilling OB  ON O.id=OB.OrderID                 --newly added fields\n                LEFT OUTER JOIN DW_Admin.dbo.tblSalesRep S on OB.cSalesRepID=S.cSalesRepID  --newly addred fields   \n            WHERE  OS.iStatus=130  AND OS.iIsCurrent=1 --(EmailFlag='Y' OR ContactFlag='Y') AND\n            and BT.cTableName like 'tblMain%'  \n            \n            /*\n            UNION\n            \n                SELECT distinct\n                O.Id  as  Orderid,\n                BT.cTableName + '_ToBeDropped' as  cTableName , \n                tempOrderid.ContactFlag,\n                tempOrderid.EmailFlag,\n            --    '' As CreatedBy,\n                U.cFirstName + ' ' + U.cLastName AS ShippedBy,\n                CASE WHEN (Divm.ID is NOT NULL) THEN Divm.cCompany ELSE ML.cCompany END as Mailer,  \n                O.cNextMarkOrderNo, \n                O.cLVaOrderNo as PO,\n                O.cDescription as OrderDescription,\n                Dat.cDatabaseName as ListName,\n                O.iProvidedCount as OrderQTY,\n                CONVERT(VARCHAR(12),OS.dCreatedDate,101) as ShipDate,\n                OB.OESSOrderID as OESSOrderID,\n                OB.cOESSAccountNumber as OESSAccountNumber,\n                CAST(OB.iOESSInvoiceTotal AS VARCHAR(12)) as OESSInvoiceTotal,\n                S.cSalesRepName as SalesRepName,\n                S.cDivisionNo as DivisionNumber,\n                Left(O.cNotes,100) as cNotes\n            from #OrderIds tempOrderid \n                inner join DW_Admin.dbo.tblOrder O On tempOrderid.Orderid = O.id\n                JOIN DW_Admin.dbo.tblBuild B  ON O.BuildId=B.id\n                JOIN DW_Admin.dbo.tblDatabase Dat  on B.DatabaseID=Dat.Id\n                JOIN DW_Admin.dbo.tblDivision Div  ON Dat.DivisionID=Div.Id\n                LEFT OUTER JOIN dw_admin.dbo.tblDivisionMailer Divm ON O.DivisionMailerID  = Divm.ID AND O.DivisionMailerID <> 0\n                LEFT OUTER JOIN dw_admin.dbo.tblMailer ML  ON Dat.Id =ML.DatabaseID\n                JOIN DW_Admin.dbo.tblOrderStatus OS  on O.id=OS.OrderID\n                JOIN DW_Admin.dbo.tbluser U  on OS.cCreatedBy=U.cUserID\n                JOIN DW_Admin.dbo.tblBuildTable BT  ON B.id=BT.BuildID\n                LEFT OUTER JOIN DW_Admin.dbo.tblOrderBilling OB  ON O.id=OB.OrderID                 --newly added fields\n                LEFT OUTER JOIN DW_Admin.dbo.tblSalesRep S on OB.cSalesRepID=S.cSalesRepID  --newly addred fields   \n            WHERE  OS.iStatus=130  AND OS.iIsCurrent=1 --(EmailFlag='Y' OR ContactFlag='Y') AND\n            and BT.cTableName like 'tblMain%' \n        */\n\n        --Staging table for IQ export\n        DROP TABLE IF EXISTS ##RoyaltyTemp_@databaseID_ToBeDropped;\n        Select * \n        INTO ##RoyaltyTemp_@databaseID_ToBeDropped  \n        from #OrderIdWithExportFields; \n\n         -- Task 3 Started\n        DROP Table IF EXISTS ##RoyaltyOrderIds_@databaseID_ToBeDropped;\n        \n        SELECT Orderid,\n        cTableName,\n        ContactFlag, \n        EmailFlag,\n        --CreatedBy, \n        ShippedBy,\n        REPLACE (Mailer,'|','') AS Mailer,                   \n        cNextMarkOrderNo,\n        PO,\n        REPLACE (OrderDescription,'|','') AS OrderDescription,\n        ListName,\n        OrderQty,\n        ShipDate,\n    --  LEFT(REPLACE(REPLACE(REPLACE(cNotes,'|',''),char(13),''),char(10),''),100) AS cNotes,\n        CASE WHEN OESSOrderID IS NULL THEN '' ELSE OESSOrderID END AS OESSOrderID,\n        CASE WHEN OESSAccountNumber IS NULL THEN '' ELSE OESSAccountNumber END AS OESSAccountNumber, \n        CASE WHEN OESSInvoiceTotal IS NULL THEN '' ELSE OESSInvoiceTotal END AS OESSInvoiceTotal,\n        CASE WHEN SalesRepName IS NULL THEN '' ELSE SalesRepName END AS SalesRepName,\n        CASE WHEN DivisionNumber IS NULL THEN '' ELSE DivisionNumber END AS DivisionNumber, \n        LEFT(REPLACE(REPLACE(REPLACE(cNotes,'|',''),char(13),''),char(10),''),100) AS cNotes\n        INTO ##RoyaltyOrderIds_@databaseID_ToBeDropped\n        FROM ##RoyaltyTemp_@databaseID_ToBeDropped; ",
    "1150_fetch" : "--SET the Begin and End Date\n\n        DECLARE @lcSQL varchar (8000) =''\n        DECLARE @inString varchar (8000) =''\n        DECLARE @likeString varchar (8000) =''\n        DECLARE @fieldList varchar(800) =''\n        DECLARE @databaseID int\n        DECLARE @BeginDate smalldatetime, @EndDate smalldatetime \n\n        BEGIN\n                SET @databaseID = {db_id}   \n        END\n\n-- Daily, Weekly or Monthly\n        IF '{mode}' = 'W'\n            BEGIN\n                SET @BeginDate = GETDATE() - 7\n                SET @EndDate   = GETDATE() - 1\n                \n                \n            END\n        ELSE\n            BEGIN\n                IF '{mode}' = 'DR'\n                    BEGIN\n                        SET @BeginDate = '{start_date}'\n                        SET @EndDate = '{end_date}'\n                    END\n                ELSE\n                    BEGIN\n                        IF '{mode}' = 'D'\n                            BEGIN\n                                SET @BeginDate = GETDATE() - 1\n                                SET @EndDate   = GETDATE() - 0\n                            END\n                        ELSE\n                            --Default Monthly\n                             BEGIN\n                                SET @BeginDate  = DATEADD(month, DATEDIFF(month, 0, EOMONTH(GETDATE(), -1)), 0)\n                                SET @EndDate    = EOMONTH(GETDATE(), -1) \n                             END\n                    END\n            END\n\n\n\nDROP TABLE IF EXISTS #RoyaltyOrderIdTable;\nCREATE TABLE #RoyaltyOrderIdTable\n(\n  OrderId varchar(10) NULL,\n  cTableName varchar(50) NOT NULL,\n  CreatedBy varchar(50) NULL,\n  ShippedBy varchar(50) NULL,\n  Mailer varchar(100) NULL, \n  cNextMarkOrderNo varchar(50) NULL,\n  PO varchar(50) NULL,\n  OrderDescription varchar(50) NULL,\n  ListName varchar(50) NULL,\n  OrderQty varchar(12) NULL,\n  ShipDate varchar(10) NULL,\n  cNotes varchar(50) NULL,\n  Bus_ContactName_Exported varchar(3) NULL, \n  Bus_EmailAddress_Exported varchar(3) NULL, \n  Cons_EmailAddress_Exported varchar(3) NULL \n);\n\n\nINSERT INTO  #RoyaltyOrderIdTable\n   (CreatedBy,\n    ShippedBy,\n    OrderId,\n    Mailer,\n    cNextMarkOrderNo, \n    PO,\n    OrderDescription, \n    ListName, \n    OrderQTY,\n    ShipDate,\n    cTableName,\n    cNotes)\n    \n /*   IDMS Enhancement request: 433 Modify Execreach Royalty Report for Execureach (1150)  \n */\nSELECT \n    '' As CreatedBy,\n    U.cFirstName + ' ' + U.cLastName AS ShippedBy,\n    O.Id  as  Orderid,\nCASE WHEN \n    (Divm.ID is NOT NULL)      /* Added Case checking for Mailer */\nTHEN Divm.cCompany \nELSE ML.cCompany \nEND as Mailer,  \n  O.cNextMarkOrderNo, /* Added  cNextMarkOrderNo from tblorder */\n    O.cLVaOrderNo As PO,\n    O.cDescription as OrderDescription,\n    Dat.cDatabaseName as ListName,\n    O.iProvidedCount as OrderQTY,\n    CONVERT(VARCHAR(10),OS.dCreatedDate,101) as ShipDate,\n    BT.cTableName as  cTableName , \n    Left(O.cNotes,50) as cNotes\nfrom DW_Admin.dbo.tblorder O \nJOIN DW_Admin.dbo.tblBuild B  ON O.BuildId=B.id\nJOIN DW_Admin.dbo.tblDatabase Dat  on B.DatabaseID=Dat.Id\nJOIN DW_Admin.dbo.tblDivision Div  ON Dat.DivisionID=Div.Id\n/*Added NEW LEFT join for tblDivisionMailer,tblMailer */\nLEFT OUTER JOIN dw_admin.dbo.tblDivisionMailer Divm ON O.DivisionMailerID  = Divm.ID AND O.DivisionMailerID <>0\n/*Added NEW LEFT join for tblDivisionMailer,tblMailer */\nLEFT OUTER JOIN dw_admin.dbo.tblMailer ML  ON Dat.Id =ML.DatabaseID\nJOIN DW_Admin.dbo.tblOrderStatus OS  on O.id=OS.OrderID\nJOIN DW_Admin.dbo.tbluser U  on OS.cCreatedBy=U.cUserID\nJOIN DW_Admin.dbo.tblBuildTable BT  ON B.id=BT.BuildID\nWHERE Dat.Id=@databaseID\nAND OS.iStatus=130 AND OS.iIsCurrent=1\n--AND (OS.dCreatedDate > @BeginDate AND  OS.dCreatedDate < @EndDate )\nAND (OS.dCreatedDate BETWEEN @BeginDate AND @EndDate )\n\n/* old code\nAND (OS.dCreatedDate > '2018-02-01' AND  OS.dCreatedDate < '2018-03-01' )\n--AND OS.dCreatedDate BETWEEN DATEADD(MONTH, DATEDIFF(MONTH, '19000201', GETDATE()), '19000101') AND DATEADD(MONTH, DATEDIFF(MONTH, '19000101', GETDATE()), '18991231')\n--For a custom range June, 2017 - Jan 2018\nAND OS.dCreatedDate BETWEEN DATEADD(MONTH, DATEDIFF(MONTH, '19001001', GETDATE()), '19000101') AND DATEADD(MONTH, DATEDIFF(MONTH, '19000201', GETDATE()), '18991231')\n*/\nAND BT.LK_TableType ='M'\nORDER BY CAST(O.Id AS varchar(10)),BT.cTableName\n;\n\nCREATE INDEX IX_RoyaltyOrderIdTable_Orderid on #RoyaltyOrderIdTable (Orderid);\n\n\n\nDrop Table if Exists #OrderStatusIDs\nCreate Table #OrderStatusIDs\n (  OrderId varchar(10) NULL,\n  ID int\n );\n \nINSERT INTO #OrderStatusIDs(OrderId, ID)\n   Select A.OrderID,Max(ID) as ID \n   from DW_Admin.dbo.tblOrderStatus A\n   inner join #RoyaltyOrderIdTable B  on A.OrderID = B.OrderID and iStatus=10 AND iIsCurrent=0\n   Group by A.OrderID;\n \n   /*  now update CreatedBy  */\nUpdate #RoyaltyOrderIdTable\n      SET CreatedBy = U.cFirstName + ' ' + U.cLastName\n    --Select A.Orderid,U.*\n  From #RoyaltyOrderIdTable  A\n  Inner JOIN DW_Admin.dbo.tblOrderStatus OS  on A.Orderid=OS.OrderID\n  Inner JOIN DW_Admin.dbo.tbluser U  on OS.cCreatedBy=U.cUserID\n  Inner Join #OrderStatusIDs OrderStatusIDs On OrderStatusIDs.ID = OS.ID  AND OS.iStatus=10 AND OS.iIsCurrent=0;\n\n\n/*cleanups*/   \nUpdate #RoyaltyOrderIdTable\n  SET cNotes = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(cNotes,'''',''),'\"',''),'|',''),char(10),''),char(13),''),\n      Bus_ContactName_Exported ='No', \n    Bus_EmailAddress_Exported ='No', \n    Cons_EmailAddress_Exported ='No' ;\n\n\n/*\n--Additinal Logic : Dawn. 2016.09.08\nAdd 3 flags to identify below fields used in Export payout or not\ncfieldname or Calculation.\n'Bus_ContactName','Bus_EmailAddress','cons_emailaddress'\n*/\n\n\n/*Bus_ContactName_Exported*/\nUPDATE #RoyaltyOrderIdTable \n  SET Bus_ContactName_Exported ='Yes'\nfrom #RoyaltyOrderIdTable A\nInner join DW_Admin.dbo.tblOrderExportLayout B On A.Orderid =B.OrderID\nwhere ( cFieldname ='Bus_ContactName' OR cCalculation like '%Bus_ContactName%' );\n\n\n/*Bus_EmailAddress_Exported*/\nUPDATE #RoyaltyOrderIdTable \n  SET Bus_EmailAddress_Exported ='Yes'\nfrom #RoyaltyOrderIdTable  A\nInner join dw_admin.dbo.tblOrderExportLayout B WITH (NOLOCK) On A.Orderid =B.OrderID\nwhere ( cFieldname ='Bus_EmailAddress' OR cCalculation like '%Bus_EmailAddress%' );\n\n\n/*Cons_EmailAddress_Exported*/\nUPDATE #RoyaltyOrderIdTable \n  SET Cons_EmailAddress_Exported ='Yes'\nfrom #RoyaltyOrderIdTable  A\nInner join dw_admin.dbo.tblOrderExportLayout B WITH (NOLOCK) On A.Orderid =B.OrderID\nwhere ( cFieldname ='cons_emailaddress' OR cCalculation like '%cons_emailaddress%' );\n\n/*Drop Orderids if all the flags shows  'No'*/\nDELETE \nfrom #RoyaltyOrderIdTable \nwhere ( Bus_ContactName_Exported ='No' AND Bus_EmailAddress_Exported='No' AND Cons_EmailAddress_Exported  ='No');\n\n\n\n\n/*End of Additinal Logic */\n\nDROP TABLE IF EXISTS ##RoyaltyTemp_@databaseID_ToBeDropped;\nSelect * \nINTO ##RoyaltyTemp_@databaseID_ToBeDropped\nfrom #RoyaltyOrderIdTable;\n\nDROP Table IF EXISTS ##RoyaltyOrderIds_@databaseID_ToBeDropped;\nSELECT Orderid, \n  cTableName,\n  CreatedBy,\n  ShippedBy,\n  REPLACE (Mailer,'|','') AS Mailer,          /*  As per Incident: 733065,Reeba added 2 new fields: mailer & nextmark # on 2018.11.30 */        \n    cNextMarkOrderNo,\n  PO,\n  REPLACE (OrderDescription,'|','') AS OrderDescription,\n  ListName,\n  OrderQty,\n  ShipDate,\n  LEFT(REPLACE(REPLACE(REPLACE(cNotes,'|',''),char(13),''),char(10),''),100) AS cNotes, \n  Bus_ContactName_Exported,\n  Bus_EmailAddress_Exported,\n  Cons_EmailAddress_Exported as cLine \n  INTO ##RoyaltyOrderIds_@databaseID_ToBeDropped\n  FROM ##RoyaltyTemp_@databaseID_ToBeDropped;"
}